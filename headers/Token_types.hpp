#pragma once

namespace Token {
    enum class Identifier {
        BASE,
    };

    enum class Operator {
        GTE, LTE, GT, LT, NOT_EQUAL, EQUATE, ASSIGN,
        ADD, SUB, MULT, DIV, NOT, MOD, XOR, AND, OR,
        LOGICAL_NOT, LOGICAL_AND, LOGICAL_OR, LSHIFT,
        RSHIFT, ADD_ASSIGN, SUB_ASSIGN, MULT_ASSIGN,
        DIV_ASSIGN, AND_ASSIGN, OR_ASSIGN, XOR_ASSIGN,
        MOD_ASSIGN, LSHIFT_ASSIGN, RSHIFT_ASSIGN, UNARY_POS,
        UNARY_NEG, TERNARY_IF, TERNARY_ELSE, INCREMENT, DECREMENT
    };

    enum class Keyword {
        OR, DO, IF, INT, NOT, NEW, FOR, ASM, XOR, AND, TRY,
        ENUM, CASE, BOOL, AUTO, VOID, CHAR, GOTO, THIS, ELSE, 
        LONG, OR_EQ, CLASS, COMPL, THROW, CONST, SHORT, CATCH,
        BREAK, BITOR, UNION, USING, FLOAT, WHILE, DELETE, DOUBLE,
        BITAND, AND_EQ, EXPORT, EXTERN, FRIEND, XOR_EQ, INLINE,
        STRUCT, STATIC, SIZEOF, SIGNED, NOT_EQ, RETURN, TYPEID,
        PUBLIC, SWITCH, TYPEDEF, NULLPTR, PRIVATE, DEFAULT, MUTABLE,
        CONCEPT, CHAR8_T, VIRTUAL, WCHAR_T, ALIGNOF, ALIGNAS, NOEXCEPT,
        DECLTYPE, REFLEXPR, REGISTER, REQUIRES, CO_YIELD, EXPLICIT,
        CO_AWAIT, VOLATILE, UNSIGNED, TYPENAME, OPERATOR, TEMPLATE,
        CHAR16_T, CHAR32_T, CONTINUE, CO_RETURN, PROTECTED, CONSTINIT,
        CONSTEXPR, CONSTEVAL, NAMESPACE, CONST_CAST, STATIC_CAST,
        THREAD_LOCAL, SYNCHRONIZED, DYNAMIC_CAST, STATIC_ASSERT,ATOMIC_COMMIT,
        ATOMIC_CANCEL, ATOMIC_NOEXCEPT, REINTERPRET_CAST, 
    };

    enum class Delimiter {
        L_CURLY, R_CURLY, L_SQUARE, R_SQUARE, L_PARENTHESIS,
        R_PARENTHESIS, L_ANGLED, R_ANGLED, SEMICOLON,
    };

    enum class Literal {
        INT, FLOAT, STRING, CHAR, HEX, OCT, BIN, BOOL
    };
}